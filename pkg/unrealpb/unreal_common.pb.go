// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: unreal_common.proto

package unrealpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *FVector) Reset() {
	*x = FVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FVector) ProtoMessage() {}

func (x *FVector) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FVector.ProtoReflect.Descriptor instead.
func (*FVector) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{0}
}

func (x *FVector) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *FVector) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *FVector) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type UnrealObjectRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetGUID uint32 `protobuf:"varint,1,opt,name=NetGUID,proto3" json:"NetGUID,omitempty"`
}

func (x *UnrealObjectRef) Reset() {
	*x = UnrealObjectRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnrealObjectRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnrealObjectRef) ProtoMessage() {}

func (x *UnrealObjectRef) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnrealObjectRef.ProtoReflect.Descriptor instead.
func (*UnrealObjectRef) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{1}
}

func (x *UnrealObjectRef) GetNetGUID() uint32 {
	if x != nil {
		return x.NetGUID
	}
	return 0
}

type RemoteFunctionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetObj     *UnrealObjectRef `protobuf:"bytes,1,opt,name=targetObj,proto3" json:"targetObj,omitempty"`
	FunctionName  string           `protobuf:"bytes,2,opt,name=functionName,proto3" json:"functionName,omitempty"`
	ParamsPayload []byte           `protobuf:"bytes,3,opt,name=paramsPayload,proto3" json:"paramsPayload,omitempty"`
}

func (x *RemoteFunctionMessage) Reset() {
	*x = RemoteFunctionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteFunctionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteFunctionMessage) ProtoMessage() {}

func (x *RemoteFunctionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteFunctionMessage.ProtoReflect.Descriptor instead.
func (*RemoteFunctionMessage) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{2}
}

func (x *RemoteFunctionMessage) GetTargetObj() *UnrealObjectRef {
	if x != nil {
		return x.TargetObj
	}
	return nil
}

func (x *RemoteFunctionMessage) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *RemoteFunctionMessage) GetParamsPayload() []byte {
	if x != nil {
		return x.ParamsPayload
	}
	return nil
}

type SceneComponentState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Marks that the state should be removed from the containing map
	Removed                         bool               `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
	BAbsoluteLocation               *bool              `protobuf:"varint,2,opt,name=bAbsoluteLocation,proto3,oneof" json:"bAbsoluteLocation,omitempty"`
	BAbsoluteRotation               *bool              `protobuf:"varint,3,opt,name=bAbsoluteRotation,proto3,oneof" json:"bAbsoluteRotation,omitempty"`
	BAbsoluteScale                  *bool              `protobuf:"varint,4,opt,name=bAbsoluteScale,proto3,oneof" json:"bAbsoluteScale,omitempty"`
	BVisible                        *bool              `protobuf:"varint,5,opt,name=bVisible,proto3,oneof" json:"bVisible,omitempty"`
	BShouldBeAttached               *bool              `protobuf:"varint,6,opt,name=bShouldBeAttached,proto3,oneof" json:"bShouldBeAttached,omitempty"`
	BShouldSnapLocationWhenAttached *bool              `protobuf:"varint,7,opt,name=bShouldSnapLocationWhenAttached,proto3,oneof" json:"bShouldSnapLocationWhenAttached,omitempty"`
	BShouldSnapRotationWhenAttached *bool              `protobuf:"varint,8,opt,name=bShouldSnapRotationWhenAttached,proto3,oneof" json:"bShouldSnapRotationWhenAttached,omitempty"`
	AttachParent                    *UnrealObjectRef   `protobuf:"bytes,9,opt,name=attachParent,proto3,oneof" json:"attachParent,omitempty"`
	AttachChildren                  []*UnrealObjectRef `protobuf:"bytes,10,rep,name=attachChildren,proto3" json:"attachChildren,omitempty"`
	AttachSocketName                *string            `protobuf:"bytes,11,opt,name=attachSocketName,proto3,oneof" json:"attachSocketName,omitempty"`
	RelativeLocation                *FVector           `protobuf:"bytes,12,opt,name=relativeLocation,proto3,oneof" json:"relativeLocation,omitempty"`
	RelativeRotation                *FVector           `protobuf:"bytes,13,opt,name=relativeRotation,proto3,oneof" json:"relativeRotation,omitempty"`
	RelativeScale                   *FVector           `protobuf:"bytes,14,opt,name=relativeScale,proto3,oneof" json:"relativeScale,omitempty"`
}

func (x *SceneComponentState) Reset() {
	*x = SceneComponentState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneComponentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneComponentState) ProtoMessage() {}

func (x *SceneComponentState) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneComponentState.ProtoReflect.Descriptor instead.
func (*SceneComponentState) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{3}
}

func (x *SceneComponentState) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

func (x *SceneComponentState) GetBAbsoluteLocation() bool {
	if x != nil && x.BAbsoluteLocation != nil {
		return *x.BAbsoluteLocation
	}
	return false
}

func (x *SceneComponentState) GetBAbsoluteRotation() bool {
	if x != nil && x.BAbsoluteRotation != nil {
		return *x.BAbsoluteRotation
	}
	return false
}

func (x *SceneComponentState) GetBAbsoluteScale() bool {
	if x != nil && x.BAbsoluteScale != nil {
		return *x.BAbsoluteScale
	}
	return false
}

func (x *SceneComponentState) GetBVisible() bool {
	if x != nil && x.BVisible != nil {
		return *x.BVisible
	}
	return false
}

func (x *SceneComponentState) GetBShouldBeAttached() bool {
	if x != nil && x.BShouldBeAttached != nil {
		return *x.BShouldBeAttached
	}
	return false
}

func (x *SceneComponentState) GetBShouldSnapLocationWhenAttached() bool {
	if x != nil && x.BShouldSnapLocationWhenAttached != nil {
		return *x.BShouldSnapLocationWhenAttached
	}
	return false
}

func (x *SceneComponentState) GetBShouldSnapRotationWhenAttached() bool {
	if x != nil && x.BShouldSnapRotationWhenAttached != nil {
		return *x.BShouldSnapRotationWhenAttached
	}
	return false
}

func (x *SceneComponentState) GetAttachParent() *UnrealObjectRef {
	if x != nil {
		return x.AttachParent
	}
	return nil
}

func (x *SceneComponentState) GetAttachChildren() []*UnrealObjectRef {
	if x != nil {
		return x.AttachChildren
	}
	return nil
}

func (x *SceneComponentState) GetAttachSocketName() string {
	if x != nil && x.AttachSocketName != nil {
		return *x.AttachSocketName
	}
	return ""
}

func (x *SceneComponentState) GetRelativeLocation() *FVector {
	if x != nil {
		return x.RelativeLocation
	}
	return nil
}

func (x *SceneComponentState) GetRelativeRotation() *FVector {
	if x != nil {
		return x.RelativeRotation
	}
	return nil
}

func (x *SceneComponentState) GetRelativeScale() *FVector {
	if x != nil {
		return x.RelativeScale
	}
	return nil
}

type RootMotionMontage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RootMotionMontage) Reset() {
	*x = RootMotionMontage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootMotionMontage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootMotionMontage) ProtoMessage() {}

func (x *RootMotionMontage) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootMotionMontage.ProtoReflect.Descriptor instead.
func (*RootMotionMontage) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{4}
}

type BasedMovementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovementBase            *UnrealObjectRef `protobuf:"bytes,1,opt,name=movementBase,proto3,oneof" json:"movementBase,omitempty"`
	BoneName                *string          `protobuf:"bytes,2,opt,name=boneName,proto3,oneof" json:"boneName,omitempty"`
	Location                *FVector         `protobuf:"bytes,3,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Rotation                *FVector         `protobuf:"bytes,4,opt,name=rotation,proto3,oneof" json:"rotation,omitempty"`
	BServerHasBaseComponent *bool            `protobuf:"varint,5,opt,name=bServerHasBaseComponent,proto3,oneof" json:"bServerHasBaseComponent,omitempty"`
	BRelativeRotation       *bool            `protobuf:"varint,6,opt,name=bRelativeRotation,proto3,oneof" json:"bRelativeRotation,omitempty"`
	BServerHasVelocity      *bool            `protobuf:"varint,7,opt,name=bServerHasVelocity,proto3,oneof" json:"bServerHasVelocity,omitempty"`
}

func (x *BasedMovementInfo) Reset() {
	*x = BasedMovementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasedMovementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasedMovementInfo) ProtoMessage() {}

func (x *BasedMovementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasedMovementInfo.ProtoReflect.Descriptor instead.
func (*BasedMovementInfo) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{5}
}

func (x *BasedMovementInfo) GetMovementBase() *UnrealObjectRef {
	if x != nil {
		return x.MovementBase
	}
	return nil
}

func (x *BasedMovementInfo) GetBoneName() string {
	if x != nil && x.BoneName != nil {
		return *x.BoneName
	}
	return ""
}

func (x *BasedMovementInfo) GetLocation() *FVector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *BasedMovementInfo) GetRotation() *FVector {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *BasedMovementInfo) GetBServerHasBaseComponent() bool {
	if x != nil && x.BServerHasBaseComponent != nil {
		return *x.BServerHasBaseComponent
	}
	return false
}

func (x *BasedMovementInfo) GetBRelativeRotation() bool {
	if x != nil && x.BRelativeRotation != nil {
		return *x.BRelativeRotation
	}
	return false
}

func (x *BasedMovementInfo) GetBServerHasVelocity() bool {
	if x != nil && x.BServerHasVelocity != nil {
		return *x.BServerHasVelocity
	}
	return false
}

type CharacterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Marks that the state should be removed from the containing map
	Removed                            bool               `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
	RootMotion                         *RootMotionMontage `protobuf:"bytes,2,opt,name=rootMotion,proto3,oneof" json:"rootMotion,omitempty"`
	BasedMovement                      *BasedMovementInfo `protobuf:"bytes,3,opt,name=basedMovement,proto3,oneof" json:"basedMovement,omitempty"`
	ServerLastTransformUpdateTimeStamp *float32           `protobuf:"fixed32,4,opt,name=serverLastTransformUpdateTimeStamp,proto3,oneof" json:"serverLastTransformUpdateTimeStamp,omitempty"`
	MovementMode                       *uint32            `protobuf:"varint,5,opt,name=movementMode,proto3,oneof" json:"movementMode,omitempty"`
	BIsCrouched                        *bool              `protobuf:"varint,6,opt,name=bIsCrouched,proto3,oneof" json:"bIsCrouched,omitempty"`
	BProxyIsJumpForceApplied           *bool              `protobuf:"varint,7,opt,name=bProxyIsJumpForceApplied,proto3,oneof" json:"bProxyIsJumpForceApplied,omitempty"`
	AnimRootMotionTranslationScale     *float32           `protobuf:"fixed32,8,opt,name=animRootMotionTranslationScale,proto3,oneof" json:"animRootMotionTranslationScale,omitempty"`
	ReplayLastTransformUpdateTimeStamp *float32           `protobuf:"fixed32,9,opt,name=replayLastTransformUpdateTimeStamp,proto3,oneof" json:"replayLastTransformUpdateTimeStamp,omitempty"`
}

func (x *CharacterState) Reset() {
	*x = CharacterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterState) ProtoMessage() {}

func (x *CharacterState) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterState.ProtoReflect.Descriptor instead.
func (*CharacterState) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{6}
}

func (x *CharacterState) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

func (x *CharacterState) GetRootMotion() *RootMotionMontage {
	if x != nil {
		return x.RootMotion
	}
	return nil
}

func (x *CharacterState) GetBasedMovement() *BasedMovementInfo {
	if x != nil {
		return x.BasedMovement
	}
	return nil
}

func (x *CharacterState) GetServerLastTransformUpdateTimeStamp() float32 {
	if x != nil && x.ServerLastTransformUpdateTimeStamp != nil {
		return *x.ServerLastTransformUpdateTimeStamp
	}
	return 0
}

func (x *CharacterState) GetMovementMode() uint32 {
	if x != nil && x.MovementMode != nil {
		return *x.MovementMode
	}
	return 0
}

func (x *CharacterState) GetBIsCrouched() bool {
	if x != nil && x.BIsCrouched != nil {
		return *x.BIsCrouched
	}
	return false
}

func (x *CharacterState) GetBProxyIsJumpForceApplied() bool {
	if x != nil && x.BProxyIsJumpForceApplied != nil {
		return *x.BProxyIsJumpForceApplied
	}
	return false
}

func (x *CharacterState) GetAnimRootMotionTranslationScale() float32 {
	if x != nil && x.AnimRootMotionTranslationScale != nil {
		return *x.AnimRootMotionTranslationScale
	}
	return 0
}

func (x *CharacterState) GetReplayLastTransformUpdateTimeStamp() float32 {
	if x != nil && x.ReplayLastTransformUpdateTimeStamp != nil {
		return *x.ReplayLastTransformUpdateTimeStamp
	}
	return 0
}

type Character_ServerMovePacked_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BitsNum    uint32 `protobuf:"varint,1,opt,name=bitsNum,proto3" json:"bitsNum,omitempty"`
	PackedBits []byte `protobuf:"bytes,2,opt,name=packedBits,proto3" json:"packedBits,omitempty"`
}

func (x *Character_ServerMovePacked_Params) Reset() {
	*x = Character_ServerMovePacked_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character_ServerMovePacked_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character_ServerMovePacked_Params) ProtoMessage() {}

func (x *Character_ServerMovePacked_Params) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character_ServerMovePacked_Params.ProtoReflect.Descriptor instead.
func (*Character_ServerMovePacked_Params) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{7}
}

func (x *Character_ServerMovePacked_Params) GetBitsNum() uint32 {
	if x != nil {
		return x.BitsNum
	}
	return 0
}

func (x *Character_ServerMovePacked_Params) GetPackedBits() []byte {
	if x != nil {
		return x.PackedBits
	}
	return nil
}

type Character_ClientMoveResponsePacked_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BitsNum    uint32 `protobuf:"varint,1,opt,name=bitsNum,proto3" json:"bitsNum,omitempty"`
	PackedBits []byte `protobuf:"bytes,2,opt,name=packedBits,proto3" json:"packedBits,omitempty"`
}

func (x *Character_ClientMoveResponsePacked_Params) Reset() {
	*x = Character_ClientMoveResponsePacked_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character_ClientMoveResponsePacked_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character_ClientMoveResponsePacked_Params) ProtoMessage() {}

func (x *Character_ClientMoveResponsePacked_Params) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character_ClientMoveResponsePacked_Params.ProtoReflect.Descriptor instead.
func (*Character_ClientMoveResponsePacked_Params) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{8}
}

func (x *Character_ClientMoveResponsePacked_Params) GetBitsNum() uint32 {
	if x != nil {
		return x.BitsNum
	}
	return 0
}

func (x *Character_ClientMoveResponsePacked_Params) GetPackedBits() []byte {
	if x != nil {
		return x.PackedBits
	}
	return nil
}

type PlayerControllerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetViewRotation *FVector `protobuf:"bytes,1,opt,name=targetViewRotation,proto3,oneof" json:"targetViewRotation,omitempty"`
	SpawnLocation      *FVector `protobuf:"bytes,2,opt,name=spawnLocation,proto3,oneof" json:"spawnLocation,omitempty"`
}

func (x *PlayerControllerState) Reset() {
	*x = PlayerControllerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerControllerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerControllerState) ProtoMessage() {}

func (x *PlayerControllerState) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerControllerState.ProtoReflect.Descriptor instead.
func (*PlayerControllerState) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerControllerState) GetTargetViewRotation() *FVector {
	if x != nil {
		return x.TargetViewRotation
	}
	return nil
}

func (x *PlayerControllerState) GetSpawnLocation() *FVector {
	if x != nil {
		return x.SpawnLocation
	}
	return nil
}

type PlayerController_ServerUpdateCamera_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CamLoc         *FVector `protobuf:"bytes,1,opt,name=camLoc,proto3" json:"camLoc,omitempty"`
	CamPitchAndYaw int32    `protobuf:"varint,2,opt,name=camPitchAndYaw,proto3" json:"camPitchAndYaw,omitempty"`
}

func (x *PlayerController_ServerUpdateCamera_Params) Reset() {
	*x = PlayerController_ServerUpdateCamera_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unreal_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerController_ServerUpdateCamera_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerController_ServerUpdateCamera_Params) ProtoMessage() {}

func (x *PlayerController_ServerUpdateCamera_Params) ProtoReflect() protoreflect.Message {
	mi := &file_unreal_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerController_ServerUpdateCamera_Params.ProtoReflect.Descriptor instead.
func (*PlayerController_ServerUpdateCamera_Params) Descriptor() ([]byte, []int) {
	return file_unreal_common_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerController_ServerUpdateCamera_Params) GetCamLoc() *FVector {
	if x != nil {
		return x.CamLoc
	}
	return nil
}

func (x *PlayerController_ServerUpdateCamera_Params) GetCamPitchAndYaw() int32 {
	if x != nil {
		return x.CamPitchAndYaw
	}
	return 0
}

var File_unreal_common_proto protoreflect.FileDescriptor

var file_unreal_common_proto_rawDesc = []byte{
	0x0a, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x22,
	0x33, 0x0a, 0x07, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x7a, 0x22, 0x2b, 0x0a, 0x0f, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x47, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x47, 0x55, 0x49,
	0x44, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4f, 0x62, 0x6a, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xbe,
	0x08, 0x0a, 0x13, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x12, 0x31, 0x0a, 0x11, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x11, 0x62,
	0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x11, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02,
	0x52, 0x0e, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x62, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x04, 0x52, 0x11, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x1f, 0x62, 0x53, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68,
	0x65, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x05, 0x52, 0x1f, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x1f, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65,
	0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x06, 0x52, 0x1f, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x48, 0x07, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0e, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x10,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a,
	0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c,
	0x70, 0x62, 0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x0a,
	0x52, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48,
	0x0b, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x41,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x62, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x42, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x62, 0x53, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65,
	0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x62, 0x53,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x68, 0x65, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x22,
	0x13, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x22, 0x88, 0x04, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x65, 0x64, 0x4d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0c, 0x6d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0c, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x62, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x08, 0x62, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x46, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x48, 0x02, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62,
	0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x17, 0x62, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x61, 0x73, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x17, 0x62, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x48, 0x61, 0x73, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x62, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x05, 0x52, 0x11, 0x62, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x12, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x73, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x12, 0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x48, 0x61, 0x73, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x62, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x61, 0x73, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x73, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x22,
	0x8c, 0x06, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0a,
	0x72, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74,
	0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x46,
	0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x01, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x02, 0x52, 0x22, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x03, 0x52, 0x0c, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x62, 0x49, 0x73, 0x43, 0x72, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0b, 0x62, 0x49, 0x73,
	0x43, 0x72, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x18, 0x62,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52,
	0x18, 0x62, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x1e,
	0x61, 0x6e, 0x69, 0x6d, 0x52, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x06, 0x52, 0x1e, 0x61, 0x6e, 0x69, 0x6d, 0x52, 0x6f, 0x6f, 0x74,
	0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x22, 0x72, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x48, 0x07, 0x52, 0x22, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x4c,
	0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x25, 0x0a, 0x23, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x49, 0x73, 0x43,
	0x72, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x62, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x49, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x52, 0x6f, 0x6f,
	0x74, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x25, 0x0a, 0x23, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5d,
	0x0a, 0x21, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x69, 0x74, 0x73, 0x22, 0x65, 0x0a,
	0x29, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69,
	0x74, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69, 0x74,
	0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x69,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x42, 0x69, 0x74, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46,
	0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x48, 0x01, 0x52, 0x0d, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a,
	0x2a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x63,
	0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x2e, 0x46, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06,
	0x63, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x50, 0x69, 0x74,
	0x63, 0x68, 0x41, 0x6e, 0x64, 0x59, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x61, 0x6d, 0x50, 0x69, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x64, 0x59, 0x61, 0x77, 0x42, 0x2c,
	0x5a, 0x2a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x64, 0x2e, 0x63, 0x6c, 0x65, 0x77, 0x63,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x64, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_unreal_common_proto_rawDescOnce sync.Once
	file_unreal_common_proto_rawDescData = file_unreal_common_proto_rawDesc
)

func file_unreal_common_proto_rawDescGZIP() []byte {
	file_unreal_common_proto_rawDescOnce.Do(func() {
		file_unreal_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_unreal_common_proto_rawDescData)
	})
	return file_unreal_common_proto_rawDescData
}

var file_unreal_common_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_unreal_common_proto_goTypes = []interface{}{
	(*FVector)(nil),                                    // 0: unrealpb.FVector
	(*UnrealObjectRef)(nil),                            // 1: unrealpb.UnrealObjectRef
	(*RemoteFunctionMessage)(nil),                      // 2: unrealpb.RemoteFunctionMessage
	(*SceneComponentState)(nil),                        // 3: unrealpb.SceneComponentState
	(*RootMotionMontage)(nil),                          // 4: unrealpb.RootMotionMontage
	(*BasedMovementInfo)(nil),                          // 5: unrealpb.BasedMovementInfo
	(*CharacterState)(nil),                             // 6: unrealpb.CharacterState
	(*Character_ServerMovePacked_Params)(nil),          // 7: unrealpb.Character_ServerMovePacked_Params
	(*Character_ClientMoveResponsePacked_Params)(nil),  // 8: unrealpb.Character_ClientMoveResponsePacked_Params
	(*PlayerControllerState)(nil),                      // 9: unrealpb.PlayerControllerState
	(*PlayerController_ServerUpdateCamera_Params)(nil), // 10: unrealpb.PlayerController_ServerUpdateCamera_Params
}
var file_unreal_common_proto_depIdxs = []int32{
	1,  // 0: unrealpb.RemoteFunctionMessage.targetObj:type_name -> unrealpb.UnrealObjectRef
	1,  // 1: unrealpb.SceneComponentState.attachParent:type_name -> unrealpb.UnrealObjectRef
	1,  // 2: unrealpb.SceneComponentState.attachChildren:type_name -> unrealpb.UnrealObjectRef
	0,  // 3: unrealpb.SceneComponentState.relativeLocation:type_name -> unrealpb.FVector
	0,  // 4: unrealpb.SceneComponentState.relativeRotation:type_name -> unrealpb.FVector
	0,  // 5: unrealpb.SceneComponentState.relativeScale:type_name -> unrealpb.FVector
	1,  // 6: unrealpb.BasedMovementInfo.movementBase:type_name -> unrealpb.UnrealObjectRef
	0,  // 7: unrealpb.BasedMovementInfo.location:type_name -> unrealpb.FVector
	0,  // 8: unrealpb.BasedMovementInfo.rotation:type_name -> unrealpb.FVector
	4,  // 9: unrealpb.CharacterState.rootMotion:type_name -> unrealpb.RootMotionMontage
	5,  // 10: unrealpb.CharacterState.basedMovement:type_name -> unrealpb.BasedMovementInfo
	0,  // 11: unrealpb.PlayerControllerState.targetViewRotation:type_name -> unrealpb.FVector
	0,  // 12: unrealpb.PlayerControllerState.spawnLocation:type_name -> unrealpb.FVector
	0,  // 13: unrealpb.PlayerController_ServerUpdateCamera_Params.camLoc:type_name -> unrealpb.FVector
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_unreal_common_proto_init() }
func file_unreal_common_proto_init() {
	if File_unreal_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_unreal_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnrealObjectRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteFunctionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneComponentState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootMotionMontage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasedMovementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character_ServerMovePacked_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character_ClientMoveResponsePacked_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerControllerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unreal_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerController_ServerUpdateCamera_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_unreal_common_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_unreal_common_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_unreal_common_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_unreal_common_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_unreal_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_unreal_common_proto_goTypes,
		DependencyIndexes: file_unreal_common_proto_depIdxs,
		MessageInfos:      file_unreal_common_proto_msgTypes,
	}.Build()
	File_unreal_common_proto = out.File
	file_unreal_common_proto_rawDesc = nil
	file_unreal_common_proto_goTypes = nil
	file_unreal_common_proto_depIdxs = nil
}
