version: '3'
services:
  channeld:
    build: .
    image: channeld/channeld
    volumes:
    - channeld-vol:/var/log/channeld
    depends_on:
      - grafana
    ports:
      - "12108:12108"
    expose:
      - "8080"
      - "11288"
    entrypoint: [
      "./app", 
      "-cfsm=config/client_authoratative_fsm.json", 
      "-sfsm=config/server_authoratative_fsm.json",
      "-logfile=/var/log/channeld/{time}.log",
      "-profile=cpu", 
      "-profilepath=/var/log/channeld", 
      "-ct=1"]
  tps-channeld:
    build:
      context: .
      dockerfile: examples/channeld-ue-tps/Dockerfile
    image: channeld/tps-channeld
    volumes:
    - channeld-vol:/var/log/channeld
    depends_on:
      - grafana
    ports:
      - "12108:12108"
    expose:
      - "8080"
      - "11288"
    entrypoint: [
      "./app", 
      "-dev",
      "-cfsm=../../config/client_authoratative_fsm.json", 
      "-sfsm=../../config/server_authoratative_fsm.json",
      "-chs=../../config/channel_settings_hifi.json",
      "-loglevel=0",
      "-logfile=/var/log/channeld/{time}.log",
      # "-profile=cpu", 
      # "-profilepath=/var/log/channeld", 
      "-ct=0"]
  tps-server:
    image: channeld/tps-server
    depends_on:
      - tps-channeld
    volumes:
      - tps-server-vol:/LinuxServer/ChanneldIntegration/Saved
    expose:
      - "8081"
    environment:
      - CHANNELD_ADDR=tps-channeld
    entrypoint: "./ChanneldIntegrationServer.sh -server -log -metrics -trace -tracefile=/LinuxServer/ChanneldIntegration/Saved/test.utrace channeldServerAddr=tps-channeld"
  tps-client:
    image: channeld/tps-client
    depends_on:
      - tps-server
    expose:
      - "8081"
    environment:
      - CHANNELD_ADDR=tps-channeld
    # entrypoint: "./ChanneldIntegration.sh 127.0.0.1 -log channeldClientAddr=tps-channeld -nullrhi -FPS=5"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
    scale: 3
  tanks:
    image: channeld/tanks
    depends_on:
      - channeld
    environment:
      - CHANNELD_IP=channeld
    entrypoint: ["./server.x86_64", "-sa", "channeld", "-spawnai", "500"]
  chat:
    profiles:
     - donotstart
    build:
      context: .
      dockerfile: examples/chat-rooms/Dockerfile
    image: channeld/chat
    volumes:
     - chat-vol:/var/log/chat
    depends_on:
      - grafana
    deploy:
      resources:
        limits:
          cpus: "3.5"
    ports:
      - "8080:8080"
      - "12108:12108"
    expose:
      - "8080"
      - "12108"
    entrypoint: ["./app", "-profile=cpu", "-dev", "-profilepath=/var/log/chat", "-ct=0", "-chs=../../config/channel_settings_lofi.json"]
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    expose:
      - "3000"
  prometheus:
    image: prom/prometheus
    entrypoint: /bin/sh -c
    command: |
      'sh -s <<EOF
        cat > ./prometheus.yml <<EON
      global:
        scrape_interval:     2s
        evaluation_interval: 2s
      scrape_configs:
        - job_name: channeld
          static_configs:
          - targets: ['channeld:8080', 'chat:8080', 'tps-channeld:8080', 'tps-server:8081', 'tps-client:8081']
      EON
      prometheus --config.file=./prometheus.yml
      EOF'
    ports:
      - "9090:9090"
volumes:
  channeld-vol:
  chat-vol:
  tps-server-vol: