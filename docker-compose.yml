version: '3'
services:
  channeld:
    build:
      dockerfile: Dockerfile
    image: channeld/channeld
    volumes:
      - channeld-vol:/var/log/channeld
    depends_on:
      - grafana
    ports:
      - "12108:12108"
    expose:
      - "8080"
      - "11288"
    entrypoint: [
      "./app", 
      "-cfsm=config/client_authoratative_fsm.json", 
      "-sfsm=config/server_authoratative_fsm.json", 
      # "-profile=cpu", 
      # "-profilepath=/var/log/channeld", 
      "-ct=1"]
  tanks:
    image: channeld/tanks
    depends_on:
      - channeld
    environment:
      - CHANNELD_IP=channeld
  chat:
    profiles:
      - donotstart
    build:
      context: .
      dockerfile: examples/chat-rooms/Dockerfile
    image: channeld/chat
    volumes:
      - chat-vol:/var/log/chat
    depends_on:
      - grafana
    deploy:
      resources:
        limits:
          cpus: "3.5"
        reservations:
          cpus: "2"
    ports:
      - "8080:8080"
      - "12108:12108"
    expose:
      - "8080"
      - "12108"
    entrypoint: ["./app", "-profile=cpu", "-profilepath=/var/log/chat", "-ct=0", "-chs=../../config/channel_settings_lofi.json"]
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    expose:
      - "3000"
  prometheus:
    image: prom/prometheus
    entrypoint: /bin/sh -c
    command: |
      'sh -s <<EOF
        cat > ./prometheus.yml <<EON
      global:
        scrape_interval:     1s
        evaluation_interval: 1s
      scrape_configs:
        - job_name: channeld
          static_configs:
          - targets: ['channeld:8080', 'chat:8080']
      EON
      prometheus --config.file=./prometheus.yml
      EOF'
    ports:
      - "9090:9090"
volumes:
  channeld-vol:
  chat-vol: